scalar OperationPlan
  @domain(
    destination: "src/plan/execution/model"
    root_module: "plan/execution/model"
    context_name: "ctx"
    context_type: "OperationPlanContext"
    visibility: "(crate)"
    imports: [{ module: "schema", domain: "schema" }, { module: "crate/plan/solver", domain: "operation_solution" }]
  )

union Executable @id @meta(module: "executable") = Plan | ResponseModifier

scalar QueryPartitionId @prelude @id
scalar Resolver @prelude

# Overriding the schema one as we inline it
scalar FieldSetRecord @prelude

type Plan @indexed(id_size: "u16") @meta(module: "plan") {
  query_partition_id: QueryPartitionId!
  requires: FieldSetRecord!
  resolver: Resolver!
  parent_count: usize!
  children: [Executable!]!
}

type ResponseModifier @indexed(id_size: "u16") @meta(module: "response_modifier") {
  definition: ResponseModifierDefinition!
  sorted_targets: [ResponseModifierTarget!]!
  parent_count: usize!
  children: [Executable!]!
}

scalar ResponseObjectSetDefinitionId @id @prelude
scalar ResponseKey @copy @prelude

type ResponseModifierTarget @meta(module: "response_modifier/target") {
  set_id: ResponseObjectSetDefinitionId!
  ty: CompositeType!
  key: ResponseKey!
}
